%%  comment symbol
DATATYPE KNF;
%%  AUTHOR  R. Buendgen
%%  STATUS not complete
%%  DESCRIPTION Boolean algebra, TRS computes KNF
SORT
	BOOLEAN;
CONST
	T, F: BOOLEAN;
VAR
	p, q, r: BOOLEAN;
OPERATOR
	~: BOOLEAN -> BOOLEAN;	%%  not
	/\: BOOLEAN, BOOLEAN -> BOOLEAN;	%%  and
	\/: BOOLEAN, BOOLEAN -> BOOLEAN;	%%  or
	=>: BOOLEAN, BOOLEAN -> BOOLEAN;	%%  implies
	<=>: BOOLEAN, BOOLEAN -> BOOLEAN;	%%  equivalent
	#: BOOLEAN, BOOLEAN -> BOOLEAN;	%%  exclusive or
	|: BOOLEAN, BOOLEAN -> BOOLEAN;	%%  nand
NOTATION
	~: FUNCTION;
	/\, \/, =>, <=>, #, |: INFIX;
THEORY
	/\, \/: AC;
AXIOM
  [1] (p => q) == (~(p) \/ q);
  [2] (p <=> q) == ((p /\ q) \/ (~(p) /\ ~(q)));
  [3] (p # q) == ((~(p) /\ q) \/ (p /\ ~(q)));
  [4] (p | q) == ~((p /\ q)) ;
  [5] ~(T) == F;
  [6] ~(F) == T;
  [7] (p /\ ~(p)) == F;
  [8] (p \/ ~(p)) == T;
  [9] ~(~(p)) == p;
 [10] ~((p /\ q)) == (~(p) \/ ~(q));
 [11] ~((p \/ q)) == (~(p) /\ ~(q));
 [12] (p /\ T) == p;
 [13] (p /\ F) == F;
 [14] (p /\ p) == p;
 [15] (p \/ T) == T;
 [16] (p \/ F) == p;
 [17] (p \/ p) == p;
 [18] (p \/ (q /\ r)) == ((p \/ q) /\ (p \/ r));
END
