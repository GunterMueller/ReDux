#!/bin/sh
# regrep -- recursive source egrep in ReDuX system
# 
# Usage: regrep <string for egrep> [ hd | module_name |<directory>]
# Output: All lines in ReDuX source files containing <string for egrep>.
#         If a module name (or hd) is used, only the according 
#         ReDuX subsystem (or the ReDuX header file directory) is searched
#         through. If <directory> is provided as second argument, then
#         <directory> is scanned recursively for files which match *.ald.
#         The variable AMODULES contains all valid module names.

 RDX=RDX
#^^^^^^^             Only to be modified by the ReDuX 
#                    installation make file!
 AMODULES=AMODULES
#^^^^^^^^            Only to be modified by the ReDuX 
#                    installation make file!
RDXS=$RDX/src
RDXB=$RDX/bin
headers=include

if [ \( $# -lt 1 \) -o \( $# -gt 2 \) ]; then 
    echo "Usage: $0 <string for egrep> [ hd | module_name |<directory>]" 1>&2
    echo "where module_name is one of the following: $AMODULES" 1>&2
    exit 1
fi

if [ $# -eq 1 ]
then 
    cd $RDXS 
    args=`$RDXB/fhds $headers`
    if [ "" != "${args}" ]
    then
       egrep "$1" $args
    fi
    for f in $AMODULES
    do
        args=`$RDXB/fald $f`
        if [ "" != "${args}" ]
        then
            egrep "$1" $args
        fi
    done
else
    for f in hd $AMODULES; do
       if [ $2 != $f ]; then
          continue
       fi
       cd $RDXS
       if [ $2 = hd ]; then
          args=`$RDXB/fhds $headers`
       else
          args=`$RDXB/fald $2`
       fi
       if [ -n "${args}" ]; then
          egrep "$1" $args
       fi
       exit 0
    done
    if [ ! -d $2 ]; then
       echo "$0: $2 does not exist or is not a directory!" 1>&2
       exit 1
    fi
    args=`$RDXB/fald $2`
    if [ "" != "${args}" ]; then   
       egrep "$1" $args   
    fi
fi
